{"ast":null,"code":"var _jsxFileName = \"/Users/Tania/Work/REACT/Dustin_git/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"Jill Johnson\",\n      email: \"jill@gmail.com\",\n      phone: \"111-111-1111\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"Sara Watson\",\n      email: \"sara@gmail.com\",\n      phone: \"222-222-2222\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"Harry White\",\n      email: \"harry@gmail.com\",\n      phone: \"333-333-3333\",\n      type: \"professional\"\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/Tania/Work/REACT/Dustin_git/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","Fragment","useReducer","v4","uuidv4","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { Fragment, useReducer } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer'\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n              id: 1,\n              name: \"Jill Johnson\",\n              email: \"jill@gmail.com\",\n              phone: \"111-111-1111\",\n              type: \"personal\",\n            },\n            {\n              id: 2,\n              name: \"Sara Watson\",\n              email: \"sara@gmail.com\",\n              phone: \"222-222-2222\",\n              type: \"personal\",\n            },\n            {\n              id: 3,\n              name: \"Harry White\",\n              email: \"harry@gmail.com\",\n              phone: \"333-333-3333\",\n              type: \"professional\",\n            },\n          ],\n          current: null,\n          filtered: null\n    };\n    const [state, dispatch] = useReducer(ContactReducer, initialState)\n\n    // Add Contact\n\n    const addContact = contact => {\n      contact.id = uuidv4();\n      dispatch({ type: ADD_CONTACT, payload: contact });\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    }\n    \n    // Set Current Contact\n    const setCurrent = contact => {\n      dispatch({ type: SET_CURRENT, payload: contact });\n    }\n    \n    // Clear Current Contact\n    const clearCurrent = () => {\n      dispatch({ type: CLEAR_CURRENT });\n    }\n    \n    // Update Contact\n    const updateContact = contact => {\n      dispatch({ type: UPDATE_CONTACT, payload: contact });\n    }\n\n    // Filter Contact\n    const filterContacts = text => {\n      dispatch({ type: FILTER_CONTACTS, payload: text });\n    }\n\n    // Clear Filter\n    const clearFilter = () => {\n      dispatch({ type: CLEAR_FILTER });\n    }\n\n    return (\n        <ContactContext.Provider \n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter\n            }}\n        >\n            {props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}