{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';import ContactItem from'./ContactItem';import Spinner from'../layout/Spinner';import{CSSTransition,TransitionGroup}from'react-transition-group';import{jsx as _jsx}from\"react/jsx-runtime\";function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h4\",{children:\"Please add a contact\"});}return/*#__PURE__*/_jsx(Fragment,{children:contacts!==null&&!loading?/*#__PURE__*/_jsx(TransitionGroup,{className:\"todo-list\",children:filtered!==null?filtered.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:1000,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact})},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:1000,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact})},contact._id);})}):/*#__PURE__*/_jsx(Spinner,{})});};export default Contacts;","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","Spinner","CSSTransition","TransitionGroup","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAAgD,wBAAhD,C,2CAEA,QAASC,CAAAA,QAAT,EAAoB,CAChB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACE,cAAD,CAAjC,CAEA,GAAQO,CAAAA,QAAR,CAAqDD,cAArD,CAAQC,QAAR,CAAkBC,QAAlB,CAAqDF,cAArD,CAAkBE,QAAlB,CAA4BC,WAA5B,CAAqDH,cAArD,CAA4BG,WAA5B,CAAyCC,OAAzC,CAAqDJ,cAArD,CAAyCI,OAAzC,CAEAX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAGF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAlD,CAA2D,CACvD,mBAAO,4CAAP,CACH,CAED,mBACI,KAAC,QAAD,WACKH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACG,KAAC,eAAD,EAAiB,SAAS,CAAC,WAA3B,UACKF,QAAQ,GAAK,IAAb,CACKA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBACtB,KAAC,aAAD,EAAiC,OAAO,CAAE,IAA1C,CAAgD,UAAU,CAAC,MAA3D,uBACI,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,EADJ,EAAoBA,OAAO,CAACC,GAA5B,CADsB,EAApB,CADL,CAMKP,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBACtB,KAAC,aAAD,EAAiC,OAAO,CAAE,IAA1C,CAAgD,UAAU,CAAC,MAA3D,uBACI,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,EADJ,EAAoBA,OAAO,CAACC,GAA5B,CADsB,EAApB,CAPV,EADH,cAgBC,KAAC,OAAD,IAjBN,EADJ,CAqBH,EAED,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layout/Spinner';\nimport { CSSTransition, TransitionGroup } from  'react-transition-group';\n\nfunction Contacts() {\n    const contactContext = useContext(ContactContext)\n\n    const { contacts, filtered, getContacts, loading } = contactContext;\n\n    useEffect(() => {\n        getContacts();\n        // eslint-disable-next-line\n    }, [])\n\n    if(contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>\n    }\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup className=\"todo-list\">\n                    {filtered !== null \n                        ? filtered.map(contact => (\n                        <CSSTransition key={contact._id} timeout={1000} classNames=\"item\">\n                            <ContactItem contact={contact}/>\n                        </CSSTransition>\n                        ))  \n                        : contacts.map(contact => (\n                        <CSSTransition key={contact._id} timeout={1000} classNames=\"item\">\n                            <ContactItem contact={contact}/>\n                        </CSSTransition>\n                        ))\n                    } \n                </TransitionGroup>\n                ) \n            : <Spinner />}\n        </Fragment>\n    );\n};\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}