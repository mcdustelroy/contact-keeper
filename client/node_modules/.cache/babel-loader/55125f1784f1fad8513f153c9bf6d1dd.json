{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";var ContactFilter=function ContactFilter(){var _useContext=useContext(ContactContext),filterContacts=_useContext.filterContacts,clearFilter=_useContext.clearFilter,filtered=_useContext.filtered;var text=useRef('');useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{ref:text,onChange:onChange,type:\"text\",placeholder:\"Filter Contacts...\"})});};export default ContactFilter;","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","filterContacts","clearFilter","filtered","text","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,2CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,gBAAkDJ,UAAU,CAACG,cAAD,CAA5D,CAAQE,cAAR,aAAQA,cAAR,CAAwBC,WAAxB,aAAwBA,WAAxB,CAAqCC,QAArC,aAAqCA,QAArC,CACA,GAAMC,CAAAA,IAAI,CAAGP,MAAM,CAAC,EAAD,CAAnB,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAGK,QAAQ,GAAK,IAAhB,CAAsB,CAClBC,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClB,GAAGJ,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAuB,EAA1B,CAA8B,CAC1BL,cAAc,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACH,CAFD,IAEO,CACHJ,WAAW,GACd,CACJ,CAND,CAQA,mBACI,mCACI,cAAO,GAAG,CAAEE,IAAZ,CAAkB,QAAQ,CAAEG,QAA5B,CAAsC,IAAI,CAAC,MAA3C,CAAkD,WAAW,CAAC,oBAA9D,EADJ,EADJ,CAKH,CAvBD,CAyBA,cAAeP,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react'\nimport ContactContext from '../../context/contact/contactContext'\n\n\nconst ContactFilter = () => {\n    const { filterContacts, clearFilter, filtered } = useContext(ContactContext)\n    const text = useRef('')\n\n    useEffect(() => {\n        if(filtered === null) {\n            text.current.value = '';\n        }\n    })\n\n    const onChange = e => {\n        if(text.current.value !== '') {\n            filterContacts(e.target.value)\n        } else {\n            clearFilter()\n        }\n    }\n\n    return (\n        <form>\n            <input ref={text} onChange={onChange} type='text' placeholder='Filter Contacts...' />\n        </form>\n    )\n}\n\nexport default ContactFilter\n"]},"metadata":{},"sourceType":"module"}