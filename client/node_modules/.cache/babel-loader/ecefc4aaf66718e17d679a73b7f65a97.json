{"ast":null,"code":"var _jsxFileName = \"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts\n  } = contactContext;\n  const [contact, setContact] = useState({// name: '',\n    // email: '',\n    // phone: '',\n    // type: 'personal',\n  }); // const { name, email, phone, type } = contact;\n\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    setContact(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      name: \"name\",\n      value: contact.name,\n      type: \"text\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Contact\",\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"bFJKAQBbGKo8T6uNFLIvExD73gg=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useContext","useState","ContactContext","ContactForm","contactContext","contacts","contact","setContact","onChange","target","name","value","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeD,cAArB;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CACnC;AACA;AACA;AACA;AAJmC,GAAD,CAAtC,CAJsB,CAUtB;;AAEA,QAAMO,QAAQ,GAAG,QAAc;AAAA,QAAb;AAACC,MAAAA;AAAD,KAAa;AAC3B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,MAAtB;AACAF,IAAAA,UAAU,CAAEK,IAAD,KAAS,EAChB,GAAGA,IADa;AAEhB,OAACF,IAAD,GAAQC;AAFQ,KAAT,CAAD,CAAV;AAKH,GAPD;;AASA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAEL,OAAO,CAACI,IAArD;AAA4D,MAAA,IAAI,EAAC,MAAjE;AAAuE,MAAA,QAAQ,EAAEF;AAAjF;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,aAA3B;AAAyC,QAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAML,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport ContactContext from '../../context/contact/contactContext'\n\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext)\n    const { contacts } = contactContext;\n\n    const [contact, setContact] = useState({\n        // name: '',\n        // email: '',\n        // phone: '',\n        // type: 'personal',\n    })\n    // const { name, email, phone, type } = contact;\n\n    const onChange = ({target}) => {\n        const {name, value} = target\n        setContact((prev)=>({\n            ...prev,\n            [name]: value,\n            \n        }))\n    }\n\n    return (\n        <form>\n            <h2 className=\"text-primary\">Add contact</h2>\n            <input placeholder='Name' name='name' value={contact.name } type='text'onChange={onChange}/>\n            {/* <input placeholder='Email' name='email' value={email} type='email'onChange={onChange}/>\n            <input placeholder='Phone' name='phone' value={phone} type='text'onChange={onChange}/>\n            <h5>Contact Type</h5>\n            <input  name='type' value='personal' checked={ type === 'personal'} type='radio'/> Personal{' '}\n            <input  name='type' value='professional' checked={ type === 'professional'} type='radio'/>Professional */}\n\n            <div>\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\" />\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}