{"ast":null,"code":"var _jsxFileName = \"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.res.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","Fragment","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { Fragment, useReducer } from 'react';\nimport axios from 'axios'\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer'\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    CONTACT_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null,\n        error: null\n    };\n    const [state, dispatch] = useReducer(ContactReducer, initialState)\n\n    // Add Contact\n\n    const addContact = async contact => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      try {\n        const res = await axios.post(\"/api/contacts\", contact, config);\n\n        dispatch({ type: ADD_CONTACT, payload: res.data });\n      } catch (err) {\n        dispatch({ type: CONTACT_ERROR, payload: err.res.msg });\n      }\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    }\n    \n    // Set Current Contact\n    const setCurrent = contact => {\n      dispatch({ type: SET_CURRENT, payload: contact });\n    }\n    \n    // Clear Current Contact\n    const clearCurrent = () => {\n      dispatch({ type: CLEAR_CURRENT });\n    }\n    \n    // Update Contact\n    const updateContact = contact => {\n      dispatch({ type: UPDATE_CONTACT, payload: contact });\n    }\n\n    // Filter Contact\n    const filterContacts = text => {\n      dispatch({ type: FILTER_CONTACTS, payload: text });\n    }\n\n    // Clear Filter\n    const clearFilter = () => {\n      dispatch({ type: CLEAR_FILTER });\n    }\n\n    return (\n        <ContactContext.Provider \n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                error: state.error,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter\n            }}\n        >\n            {props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}