{"ast":null,"code":"import _defineProperty from\"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,updateContact=contactContext.updateContact,clearCurrent=contactContext.clearCurrent,current=contactContext.current;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:current?'Edit contact':'Add contact'}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Name\",name:\"name\",value:name,type:\"text\",onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",name:\"email\",value:email,type:\"email\",onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Phone\",name:\"phone\",value:phone,type:\"text\",onChange:onChange}),/*#__PURE__*/_jsx(\"h5\",{children:\"Contact Type\"}),/*#__PURE__*/_jsx(\"input\",{name:\"type\",value:\"personal\",checked:type==='personal',type:\"radio\",onChange:onChange}),\" Personal\",' ',/*#__PURE__*/_jsx(\"input\",{name:\"type\",value:\"professional\",checked:type==='professional',type:\"radio\",onChange:onChange}),\" Professional\",/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:current?'Update contact':'Add contact',className:\"btn btn-primary btn-block\"})}),current&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll,children:\"Clear\"})})]});};export default ContactForm;","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useContext","useState","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","clearCurrent","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport ContactContext from '../../context/contact/contactContext'\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext)\n    const { addContact, updateContact, clearCurrent, current } = contactContext\n\n    useEffect(() => {\n        if(current!==null){\n            setContact(current)\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal',\n            })\n        }\n    }, [contactContext, current])\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n    })\n    const { name, email, phone, type } = contact;\n\n    const onChange = (e) => {\n        setContact({\n            ...contact,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(current === null){\n            addContact(contact);\n        } else {\n            updateContact(contact)\n        }\n        clearAll()\n    }\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-primary\">{current ? 'Edit contact' : 'Add contact'}</h2>\n            <input placeholder='Name' name='name' value={ name } type='text' onChange={onChange}/>\n            <input placeholder='Email' name='email' value={ email } type='email' onChange={onChange}/>\n            <input placeholder='Phone' name='phone' value={ phone } type='text' onChange={onChange}/>\n            <h5>Contact Type</h5>\n            <input name='type' value='personal' checked={ type === 'personal'} type='radio' onChange={onChange} /> Personal{' '}\n            <input name='type' value='professional' checked={ type === 'professional'} type='radio' onChange={onChange} /> Professional\n\n            <div>\n                <input type=\"submit\" value={current ? 'Update contact' : 'Add contact'} className=\"btn btn-primary btn-block\" />\n            </div>\n            {current && <div>\n                <button className=\"btn btn-light btn-block\" onClick={clearAll} >Clear</button>\n            </div> }\n        </form>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}