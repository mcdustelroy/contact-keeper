{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CLEAR_ERRORS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      localStorage.removeItem('token');\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Tania/Work/REACT/Dustin_git/contact-keeper/client/src/context/auth/authReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CLEAR_ERRORS","state","action","type","localStorage","setItem","payload","token","isAthenticated","loading","removeItem","isAuthenticated","user","error"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,EAQIC,YARJ,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,gBAAL;AACIW,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACI,OAAP,CAAeC,KAA7C;AACA,aAAO,EACH,GAAGN,KADA;AAEH,WAAGC,MAAM,CAACI,OAFP;AAGHE,QAAAA,cAAc,EAAE,IAHb;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKf,aAAL;AACIU,MAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGT,KADA;AAEHM,QAAAA,KAAK,EAAE,IAFJ;AAGHI,QAAAA,eAAe,EAAE,KAHd;AAIHF,QAAAA,OAAO,EAAE,KAJN;AAKHG,QAAAA,IAAI,EAAE,IALH;AAMHC,QAAAA,KAAK,EAAEX,MAAM,CAACI;AANX,OAAP;;AAQJ,SAAKN,YAAL;AACII,MAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGT,KADA;AAEHY,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AA1BR;AA4BH,CA7BD","sourcesContent":["import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CLEAR_ERRORS\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAthenticated: true,\n                loading: false,\n            }\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}