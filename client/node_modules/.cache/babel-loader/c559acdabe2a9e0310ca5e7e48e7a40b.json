{"ast":null,"code":"var _jsxFileName = \"/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts\n  } = contactContext;\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => {\n    setContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n  }; // const onChange = ({target}) => {\n  //     const {name, value} = target\n  //     setContact((prev)=>({\n  //         ...prev,\n  //         [name]: value,\n  //     }))\n  // }\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      type: \"email\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      type: \"text\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contact Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"type\",\n      value: \"personal\",\n      checked: type === 'personal',\n      type: \"radio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \" Personal\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"type\",\n      value: \"professional\",\n      checked: type === 'professional',\n      type: \"radio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), \"Professional\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Contact\",\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"UROWxAzrzVHkxtCLuOpbaJ7D2dQ=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/dustinmcelroy/Desktop/Programming/Projects/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useContext","useState","ContactContext","ContactForm","contactContext","contacts","contact","setContact","name","email","phone","type","onChange","e","target","value","onSubmit","preventDefault","addContact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeD,cAArB;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACnCO,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,IAAI,EAAE;AAJ6B,GAAD,CAAtC;AAMA,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAA+BL,OAArC;;AAEA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACpBN,IAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEP,OAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAFnB,KAAD,CAAV;AAIH,GALD,CAZsB,CAkBtB;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;AACAb,IAAAA,cAAc,CAACc,UAAf,CAA0BZ,OAA1B;AAGH,GALD;;AAOA,sBACI;AAAM,IAAA,QAAQ,EAAEU,QAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAGR,IAA9C;AAAqD,MAAA,IAAI,EAAC,MAA1D;AAAgE,MAAA,QAAQ,EAAEI;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,KAAK,EAAEH,KAA/C;AAAsD,MAAA,IAAI,EAAC,OAA3D;AAAkE,MAAA,QAAQ,EAAEG;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,KAAK,EAAEF,KAA/C;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAiE,MAAA,QAAQ,EAAEE;AAA3E;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,UAA1B;AAAqC,MAAA,OAAO,EAAGD,IAAI,KAAK,UAAxD;AAAoE,MAAA,IAAI,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,YANJ,eAMgG,GANhG,eAOI;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,OAAO,EAAGA,IAAI,KAAK,cAA5D;AAA4E,MAAA,IAAI,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAPJ,+BASI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,aAA3B;AAAyC,QAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjDD;;GAAMR,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport ContactContext from '../../context/contact/contactContext'\n\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext)\n    const { contacts } = contactContext;\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n    })\n    const { name, email, phone, type } = contact;\n\n    const onChange = (e) => {\n        setContact({\n            ...contact,\n            [e.target.name]: e.target.value,\n        })\n    }\n    // const onChange = ({target}) => {\n    //     const {name, value} = target\n    //     setContact((prev)=>({\n    //         ...prev,\n    //         [name]: value,\n            \n    //     }))\n    // }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        contactContext.addContact(contact);\n\n\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-primary\">Add contact</h2>\n            <input placeholder='Name' name='name' value={ name } type='text'onChange={onChange}/>\n            <input placeholder='Email' name='email' value={email} type='email'onChange={onChange}/>\n            <input placeholder='Phone' name='phone' value={phone} type='text'onChange={onChange}/>\n            <h5>Contact Type</h5>\n            <input  name='type' value='personal' checked={ type === 'personal'} type='radio'/> Personal{' '}\n            <input  name='type' value='professional' checked={ type === 'professional'} type='radio'/>Professional\n\n            <div>\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\" />\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}